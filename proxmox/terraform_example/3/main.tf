terraform {
    required_version = ">= 0.13.0" # Указывает, что требуется версия Terraform не ниже 0.13.0 для использования этой конфигурации.
    required_providers {
        proxmox = {
            source = "telmate/proxmox"
            version = "3.0.1-rc4"# Определяет провайдера Proxmox с указанием источника и версии. Будет скачана версия 2.9.14 или выше провайдера 'telmate/proxmox'.
        }
    }
}

 # Настройки провайдера Proxmox
provider "proxmox" {
  pm_api_url = "https://10.0.0.2:8006/api2/json"
  pm_user = "root@pam"
  pm_password = "ADMsmb456456"
  pm_tls_insecure = true # Игнорирует ошибки SSL-сертификата при подключении к Proxmox (например, если сертификат самоподписанный).
}


variable "ssh_key" {
  default = "ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIA0kgn6k1dSJqoKiUXv7qqbS9oLtHptlMK58zZTlU8Dm"
}

resource "proxmox_vm_qemu" "proxmox_vm" {
  count       = 1  # Создает 2 виртуальные машины (значение 'count' задает количество экземпляров ресурса).
  name        = "2tf-vm-${count.index}"  # Имя каждой виртуальной машины будет 'tf-vm-0', 'tf-vm-1' и т.д. в зависимости от индекса.
  target_node = "anderson"  # Указывает, на каком узле Proxmox создать виртуальные машины.
  clone       = "ubuntu-cloud-base"  # Определяет, что виртуальные машины будут клонированы из шаблона с именем 'ubuntu-cloud-init'.
  os_type     = "cloud-init"  # Тип операционной системы виртуальной машины, использующий 'cloud-init' для инициализации.
  cores       = 2  # Количество процессорных ядер для каждой виртуальной машины.
  sockets     = "1"  # Количество сокетов CPU для каждой виртуальной машины (один сокет с одним ядром).
  cpu         = "host" # Тип процессора, указывающий на использование характеристик хост-системы для виртуальной машины.
  memory      = 2048  # Объем оперативной памяти в мегабайтах для каждой виртуальной машины (1 ГБ).
  scsihw      = "virtio-scsi-pci"  # Тип контроллера для дисковой подсистемы (виртуальный SCSI контроллер).
  bootdisk    = "scsi0"  # Определяет основной диск для загрузки системы, который использует SCSI-устройство 0.
  agent       = 1  # Включает поддержку QEMU agent для более тесной интеграции гостевой и хостовой систем (например, для передачи данных о состоянии ВМ).
  ciuser      = "alex" # Устанавливает имя пользователя, которое будет создано в виртуальной машине при помощи cloud-init.
  cipassword  = "123" # Устанавливает пароль для пользователя 'kosmonaft' в виртуальной машине.



 disks {
        ide {
            ide2 {
                cloudinit {
                    storage = "local-lvm"
                }
            }
        }
        scsi {
            scsi0 {
                disk {
                   size            = "20G"
                    storage         = "local-lvm"
                    replicate       = false
                }
            }
        }
    }

  # disk {
  #   slot = 0
  #   size    = "15G"
  #   storage = "local-lvm" # Хранилище, где будет расположен виртуальный диск.
  # }

  network {
    model  = "virtio"
    bridge = "vmbr0"  # Сетевой мост, к которому будет подключена виртуальная машина (например, для связи с внешней сетью через мост Proxmox)
  }

  lifecycle {
    ignore_changes = [ 
      network,     # Игнорирует изменения в сетевой конфигурации при последующих применениях Terraform (не будет пересоздавать ВМ при изменении параметров сети).
    ]
  }

  # Настройки Cloud Init
  ipconfig0 = "ip=192.168.88.1${count.index + 2}/24,gw=192.168.88.1"
  # Задает IP-адрес для каждой виртуальной машины. Адрес будет увеличиваться на 1 для каждой ВМ (например, 192.168.10.2 и 192.168.10.3).
  
  searchdomain = "192.168.88.1" # Определяет домен для поиска по умолчанию.
  nameserver = "192.168.88.1"  # Определяет DNS-сервер.

  sshkeys = <<EOF
  ${var.ssh_key}
  EOF

}
